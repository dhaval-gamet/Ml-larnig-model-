from flask import Flask, render_template, request
import pickle

app = Flask(__name__)

# ЁЯФ╣  рдореЙрдбрд▓ рд▓реЛрдб рдХрд░реЗрдВ
with open("flower_model.pkl", "rb") as f:
    model = pickle.load(f)

# ЁЯФ╣  рдХрд▓рд░-рдирд╛рдо рдХреЛ рдирдореНрдмрд░ рдореЗрдВ рдмрджрд▓рдиреЗ рд╡рд╛рд▓рд╛ рдлрд╝рдВрдХреНрд╢рди
def color_to_number(name):
    name = name.strip().lower()
    mapping = {"рд╣рд░рд╛": 0, "рд▓рд╛рд▓": 1, "рдкреАрд▓рд╛": 2}
    return mapping.get(name, -1)

# ЁЯФ╣  рд╣реЛрдо рдкреЗрдЬ (GET) + рдкреНрд░рд┐рдбрд┐рдХреНрд╢рди (POST)
@app.route("/", methods=["GET", "POST"])
def index():
    prediction_text = None
    if request.method == "POST":
        color = request.form.get("color", "")
        size  = request.form.get("size", "")
        try:
            color_num = color_to_number(color)
            size_int  = int(size)

            if color_num == -1 or not (1 <= size_int <= 10):
                prediction_text = "тЪая╕П рд╕рд╣реА рд░рдВрдЧ (рд╣рд░рд╛/рд▓рд╛рд▓/рдкреАрд▓рд╛) рд╡ рд╕рд╛рдЗрдЬ (1-10) рджреЗрдВ!"
            else:
                pred = model.predict([[color_num, size_int]])[0]
                prediction_text = "ЁЯМ╕ рдпрд╣ рдлреВрд▓ рд╣реИ!" if pred == 1 else "ЁЯМ┐ рдпрд╣ рдЦрд░рдкрддрд╡рд╛рд░ рд╣реИ!"
        except:
            prediction_text = "тЪая╕П рдЗрдирдкреБрдЯ рдлрд╝реЙрд░реНрдореЗрдЯ рдЧрд▓рдд рд╣реИ!"

    return render_template("index.html", result=prediction_text)

# ЁЯФ╣  Replit/Render рдХреЗ рд▓рд┐рдП рдкреЛрд░реНрдЯ рд╕реЗрдЯ-рдЕрдк
if __name__ == "__main__":
    import os
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)), debug=True)
